{"remainingRequest":"/home/dathuynh/Workspace/221_Web_Programming/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dathuynh/Workspace/221_Web_Programming/client/src/pages/EditAccountPage.vue?vue&type=style&index=0&id=3a404ffe&scoped=true&lang=css&","dependencies":[{"path":"/home/dathuynh/Workspace/221_Web_Programming/client/src/pages/EditAccountPage.vue","mtime":1655271016379},{"path":"/home/dathuynh/Workspace/221_Web_Programming/client/node_modules/css-loader/dist/cjs.js","mtime":1654787308129},{"path":"/home/dathuynh/Workspace/221_Web_Programming/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1654787310467},{"path":"/home/dathuynh/Workspace/221_Web_Programming/client/node_modules/postcss-loader/src/index.js","mtime":1654787310108},{"path":"/home/dathuynh/Workspace/221_Web_Programming/client/node_modules/cache-loader/dist/cjs.js","mtime":1654787234194},{"path":"/home/dathuynh/Workspace/221_Web_Programming/client/node_modules/vue-loader/lib/index.js","mtime":1654787310467}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWRpdC1hY2NvdW50LXBhZ2Utd3JhcHBlciB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7Cn0KCi5lZGl0LW9wdGlvbnMtd3JhcHBlciB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgd2lkdGg6IDMwJTsKfQoKLnVwZGF0ZS1mb3JtLXdyYXBwZXIgewogIG1hcmdpbjogMTAwcHggMCAxMDBweCAwOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiB3cmFwOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIHdpZHRoOiA2MCU7Cn0KCi5vcHRpb24taXRlbSB7CiAgbWFyZ2luOiAyMHB4IDAgMjBweCAwOwogIGJhY2tncm91bmQ6IHJnYmEoMjI1LCAxMDEsIDMxLCAwLjI1KTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDUwcHg7CiAgYm9yZGVyLXJhZGl1czogNXB4Owp9CgoucmVzZXJ2YXRpb24tbm90ZSB7CiAgbWFyZ2luOiAyMHB4IGF1dG87CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyLXJhZGl1czogMjBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRlZGVkOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBmbGV4LXdyYXA6IHdyYXA7Cn0KCi5yZXNlcnZhdGlvbi1ub3RlID4gKiB7CiAgd2lkdGg6IDEwMCU7Cn0KCi5ub3RlLXRpdGxlIHsKICBmb250LWZhbWlseTogUm9ib3RvLCAnc2FuLXNlcmlmJzsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAyMDAlOwogIG1hcmdpbjogMjBweCAwIDIwcHggMDsKfQoKQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpIHsKICAudXBkYXRlLWZvcm0td3JhcHBlciB7CiAgICB3aWR0aDogMTAwJTsKICB9Cn0K"},{"version":3,"sources":["EditAccountPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgRA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"EditAccountPage.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"edit-account-page-wrapper\">\n    <ModalConfirm\n      @toggleModalEvent=\"toggleModalOpen('logout')\"\n      :isOpen=\"this.isLogoutModalOpen\"\n      :title=\"'Logout Confirm'\"\n      :content=\"'You are about to logout ?'\"\n      @callbackEvent=\"logoutUser\"\n    />\n    <ModalConfirm\n      @toggleModalEvent=\"toggleModalOpen('profile')\"\n      :isOpen=\"this.isEditProfileModalOpen\"\n      :title=\"'Edit Profile Confirm'\"\n      :content=\"'You are about to edit your profile'\"\n      @callbackEvent=\"handleSubmit\"\n    />\n    <ModalConfirm\n      @toggleModalEvent=\"toggleModalOpen('password')\"\n      :isOpen=\"this.isEditPasswordModalOpen\"\n      :title=\"'Edit Password Confirm'\"\n      :content=\"'You are about to edit your password, please relogin if success'\"\n      @callbackEvent=\"handleSubmit\"\n    />\n    <SideBar @logoutEvent=\"toggleModalOpen('logout')\" />\n    <div class=\"update-form-wrapper\">\n      <div style=\"width: 80%; margin: auto\">\n        <router-view\n          :key=\"$route.path\"\n          :data=\"formData\"\n          @onFormChange=\"handleFormChange\"\n          @onSubmit=\"\n            $route.name === 'editAccountProfile'\n              ? toggleModalOpen('profile')\n              : toggleModalOpen('password')\n          \"\n          :errorMessages=\"errorMessages\"\n        />\n        <div v-show=\"isSuccess\" class=\"reservation-note\" ref=\"note\">\n          <div ref=\"noteTitle\" class=\"note-title\"></div>\n          <ReservationNote :notes=\"this.notes\" :isSuccess=\"isSuccess\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SideBar from \"../components/SideBar.vue\";\nimport * as yup from \"yup\";\nimport $ from \"jquery\";\nimport ReservationNote from \"../components/ReservationNote.vue\";\nimport ModalConfirm from \"../components/ModalConfirm.vue\";\n\nexport default {\n  name: \"EditAccountPage\",\n  components: { SideBar, ReservationNote, ModalConfirm },\n  props: {},\n\n  /**\n   * Data\n   */\n  data() {\n    return {\n      isSuccess: false,\n      notes: {\n        \"New Username\": \"\",\n        \"New Email\": \"\",\n        \"New Phone Number\": \"\",\n      },\n      isLogoutModalOpen: false,\n      isEditProfileModalOpen: false,\n      isEditPasswordModalOpen: false,\n      formType: {\n        type: String,\n        default: \"\",\n      },\n      formData: {\n        // Vue Object Data will be convert into Observer\n        username: \"\",\n        email: \"\",\n        phone: \"\",\n        password: \"\",\n        newPassword: \"\",\n        confirmNewPassword: \"\",\n      },\n      errorMessages: {\n        // Vue Object Data will be convert into Observer\n        username: \"\",\n        email: \"\",\n        phone: \"\",\n        password: \"\",\n        newPassword: \"\",\n        confirmNewPassword: \"\",\n      },\n      schema: yup.object().shape({\n        email: yup.string().email().label(\"Email\"),\n        phone: yup\n          .string()\n          .matches(/^[0-9]{10}$/, \"Phone number must be 10 digits\"),\n        date: yup\n          .string()\n          .matches(\n            /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/,\n            \"Date must be of YYYY-MM-DD\"\n          ),\n        time: yup\n          .string()\n          .matches(\n            /(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)/gm,\n            \"Time must be of HH:MM:SS\"\n          ),\n        totalPeople: yup.number().min(1).max(30).label(\"Number of persons\"),\n      }),\n    };\n  },\n\n  /**\n   * Methods\n   */\n  methods: {\n    async handleInputValidation({ name, value }) {\n      let validationResult = await this.schema\n        .validate({ [name]: value })\n        .catch((error) => {\n          return error;\n        });\n      if (validationResult.errors) {\n        this.errorMessages[name] = validationResult.errors[0];\n      } else {\n        this.errorMessages[name] = \"\";\n      }\n    },\n\n    handleFormChange(newData) {\n      this.formData[newData.name] = newData.value;\n      this.handleInputValidation(newData);\n    },\n\n    toggleModalOpen(type) {\n      if (type === \"logout\") {\n        this.isLogoutModalOpen = !this.isLogoutModalOpen;\n      } else if (type === \"profile\") {\n        this.isEditProfileModalOpen = !this.isEditProfileModalOpen;\n      } else if (type === \"password\") {\n        this.isEditPasswordModalOpen = !this.isEditPasswordModalOpen;\n      }\n    },\n\n    editNotes(response) {\n      if (response) {\n        const { email, username, phoneNumber } = response;\n        this.notes[\"New Username\"] = username;\n        this.notes[\"New Email\"] = email;\n        this.notes[\"New Phone Number\"] = phoneNumber;\n        this.isSuccess = true;\n      } else {\n        this.isSuccess = true;\n      }\n    },\n\n    reloadPage() {\n      this.$router.push(\"/\");\n      this.$router.go(\"/\");\n    },\n\n    logoutUser() {\n      if (localStorage.getItem(\"UserToken\") !== \"\") {\n        localStorage.removeItem(\"UserToken\");\n      }\n      if (localStorage.getItem(\"User\") !== \"\") {\n        localStorage.removeItem(\"User\");\n      }\n      this.reloadPage();\n    },\n\n    handleSubmit() {\n      var __this = this;\n      const formData = JSON.parse(JSON.stringify(this.formData));\n\n      const UserToken = localStorage.getItem(\"UserToken\");\n      if (localStorage.getItem(\"UserToken\") === \"\") {\n        alert(\"Please login before to edit your account info\");\n        return;\n      }\n      /**\n       * Get LocalStorage UserInfo fill in unchanged field\n       */\n      const UserInfo = JSON.parse(localStorage.getItem(\"User\"));\n\n      if (this.$route.name === \"editAccountProfile\") {\n        /**\n         * Handle Edit Profile\n         */\n        this.toggleModalOpen(\"profile\");\n        let settings = {\n          url: `${process.env.VUE_APP_API_URL}/auth/update_profile`,\n          method: \"post\",\n          timeout: 0,\n          data: {\n            username: formData.username,\n            phoneNumber: formData.phone,\n            email: formData.email,\n            avatar: UserInfo.avatar,\n            userId: UserInfo.userId,\n          },\n          headers: {\n            \"Bear-Token\": UserToken,\n          },\n        };\n        $.ajax(settings).done(function (response) {\n          response = JSON.parse(JSON.stringify(JSON.parse(response)));\n          if (response.status == 200) {\n            __this.$refs.noteTitle.innerHTML =\n              \"Your Profile Has Been Updated! Please Recheck Before Leaving\";\n            __this.editNotes(response.response);\n          } else {\n            __this.$refs.noteTitle.innerHTML = response.message;\n            __this.isSuccess = true;\n            __this.editNotes(null);\n          }\n        });\n      } else if (this.$route.name === \"editAccountPassword\") {\n        /**\n         * Handle Edit Password\n         */\n        this.toggleModalOpen(\"password\");\n        let settings = {\n          url: `${process.env.VUE_APP_API_URL}/auth/update_password`,\n          method: \"post\",\n          timeout: 0,\n          data: {\n            old_password: formData.password,\n            new_password: formData.newPassword,\n            verify_password: formData.confirmNewPassword,\n          },\n          headers: {\n            \"Bear-Token\": UserToken,\n          },\n        };\n        $.ajax(settings).done(function (response) {\n          response = JSON.parse(JSON.stringify(JSON.parse(response)));\n          if (response.status == 200) {\n            __this.$refs.noteTitle.innerHTML =\n              \"Your Password Has Been Updated! Please Recheck Before Leaving\";\n            __this.logoutUser();\n          } else {\n            __this.$refs.noteTitle.innerHTML = response.message;\n          }\n        });\n      }\n    },\n  },\n\n  /**\n   * Lifecycle Hooks\n   */\n  beforeMount() {\n    if (this.$route.name === \"editAccount\") {\n      this.$router.history.push({ name: \"editAccountProfile\" });\n    }\n\n    if (localStorage.getItem(\"User\") != \"\") {\n      const UserInfo = JSON.parse(localStorage.getItem(\"User\"));\n      this.formData.username = UserInfo[\"username\"];\n      this.formData.email = UserInfo[\"email\"];\n      this.formData.phone = UserInfo[\"phoneNumber\"];\n    }\n  },\n};\n</script>\n\n<style scoped>\n.edit-account-page-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n\n.edit-options-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 30%;\n}\n\n.update-form-wrapper {\n  margin: 100px 0 100px 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 60%;\n}\n\n.option-item {\n  margin: 20px 0 20px 0;\n  background: rgba(225, 101, 31, 0.25);\n  width: 100%;\n  height: 50px;\n  border-radius: 5px;\n}\n\n.reservation-note {\n  margin: 20px auto;\n  width: 100%;\n  border-radius: 20px;\n  background-color: #ededed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.reservation-note > * {\n  width: 100%;\n}\n\n.note-title {\n  font-family: Roboto, 'san-serif';\n  text-align: center;\n  font-size: 200%;\n  margin: 20px 0 20px 0;\n}\n\n@media screen and (max-width: 900px) {\n  .update-form-wrapper {\n    width: 100%;\n  }\n}\n</style>\n"]}]}