{"remainingRequest":"D:\\Workspace\\Web\\221_Web_Programming\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Workspace\\Web\\221_Web_Programming\\client\\src\\pages\\EditAccountPage.vue?vue&type=style&index=0&id=3a404ffe&scoped=true&lang=css&","dependencies":[{"path":"D:\\Workspace\\Web\\221_Web_Programming\\client\\src\\pages\\EditAccountPage.vue","mtime":1655550438737},{"path":"D:\\Workspace\\Web\\221_Web_Programming\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1655541768209},{"path":"D:\\Workspace\\Web\\221_Web_Programming\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655541769422},{"path":"D:\\Workspace\\Web\\221_Web_Programming\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1655541769225},{"path":"D:\\Workspace\\Web\\221_Web_Programming\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655541733801},{"path":"D:\\Workspace\\Web\\221_Web_Programming\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1655541769422}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5lZGl0LWFjY291bnQtcGFnZS13cmFwcGVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC13cmFwOiB3cmFwOw0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsNCn0NCg0KLmVkaXQtb3B0aW9ucy13cmFwcGVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC13cmFwOiB3cmFwOw0KICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgd2lkdGg6IDMwJTsNCn0NCg0KLnVwZGF0ZS1mb3JtLXdyYXBwZXIgew0KICBtYXJnaW46IDEwMHB4IDAgMTAwcHggMDsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC13cmFwOiB3cmFwOw0KICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgd2lkdGg6IDYwJTsNCn0NCg0KLm9wdGlvbi1pdGVtIHsNCiAgbWFyZ2luOiAyMHB4IDAgMjBweCAwOw0KICBiYWNrZ3JvdW5kOiByZ2JhKDIyNSwgMTAxLCAzMSwgMC4yNSk7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDUwcHg7DQogIGJvcmRlci1yYWRpdXM6IDVweDsNCn0NCg0KLnJlc2VydmF0aW9uLW5vdGUgew0KICBtYXJnaW46IDIwcHggYXV0bzsNCiAgd2lkdGg6IDEwMCU7DQogIGJvcmRlci1yYWRpdXM6IDIwcHg7DQogIGJhY2tncm91bmQtY29sb3I6ICNlZGVkZWQ7DQogIGRpc3BsYXk6IGZsZXg7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICBmbGV4LXdyYXA6IHdyYXA7DQp9DQoNCi5yZXNlcnZhdGlvbi1ub3RlID4gKiB7DQogIHdpZHRoOiAxMDAlOw0KfQ0KDQoubm90ZS10aXRsZSB7DQogIGZvbnQtZmFtaWx5OiBSb2JvdG8sICdzYW4tc2VyaWYnOw0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIGZvbnQtc2l6ZTogMjAwJTsNCiAgbWFyZ2luOiAyMHB4IDAgMjBweCAwOw0KfQ0KDQpAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MDBweCkgew0KICAudXBkYXRlLWZvcm0td3JhcHBlciB7DQogICAgd2lkdGg6IDEwMCU7DQogIH0NCn0NCg=="},{"version":3,"sources":["EditAccountPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0RA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"EditAccountPage.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <div class=\"edit-account-page-wrapper\">\r\n    <ModalConfirm\r\n      @toggleModalEvent=\"toggleModalOpen('logout')\"\r\n      :isOpen=\"this.isLogoutModalOpen\"\r\n      :title=\"'Logout Confirm'\"\r\n      :content=\"'You are about to logout ?'\"\r\n      @callbackEvent=\"logoutUser\"\r\n    />\r\n    <ModalConfirm\r\n      @toggleModalEvent=\"toggleModalOpen('profile')\"\r\n      :isOpen=\"this.isEditProfileModalOpen\"\r\n      :title=\"'Edit Profile Confirm'\"\r\n      :content=\"'You are about to edit your profile'\"\r\n      @callbackEvent=\"handleSubmit\"\r\n    />\r\n    <ModalConfirm\r\n      @toggleModalEvent=\"toggleModalOpen('password')\"\r\n      :isOpen=\"this.isEditPasswordModalOpen\"\r\n      :title=\"'Edit Password Confirm'\"\r\n      :content=\"'You are about to edit your password, please relogin if success'\"\r\n      @callbackEvent=\"handleSubmit\"\r\n    />\r\n    <SideBar @logoutEvent=\"toggleModalOpen('logout')\" />\r\n    <div class=\"update-form-wrapper\">\r\n      <div style=\"width: 80%; margin: auto\">\r\n        <router-view\r\n          :key=\"$route.path\"\r\n          :data=\"formData\"\r\n          @onFormChange=\"handleFormChange\"\r\n          @onSubmit=\"\r\n            $route.name === 'editAccountProfile'\r\n              ? toggleModalOpen('profile')\r\n              : toggleModalOpen('password')\r\n          \"\r\n          :errorMessages=\"errorMessages\"\r\n        />\r\n        <div v-show=\"isSuccess\" class=\"reservation-note\" ref=\"note\">\r\n          <div ref=\"noteTitle\" class=\"note-title\"></div>\r\n          <ReservationNote :notes=\"this.notes\" :isSuccess=\"isSuccess\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SideBar from \"../components/SideBar.vue\";\r\nimport * as yup from \"yup\";\r\nimport $ from \"jquery\";\r\nimport ReservationNote from \"../components/ReservationNote.vue\";\r\nimport ModalConfirm from \"../components/ModalConfirm.vue\";\r\n\r\nexport default {\r\n  name: \"EditAccountPage\",\r\n  components: { SideBar, ReservationNote, ModalConfirm },\r\n  props: {},\r\n\r\n  /**\r\n   * Data\r\n   */\r\n  data() {\r\n    return {\r\n      isSuccess: false,\r\n      notes: {\r\n        \"New Username\": \"\",\r\n        \"New Email\": \"\",\r\n        \"New Phone Number\": \"\",\r\n      },\r\n      isLogoutModalOpen: false,\r\n      isEditProfileModalOpen: false,\r\n      isEditPasswordModalOpen: false,\r\n      formType: {\r\n        type: String,\r\n        default: \"\",\r\n      },\r\n      formData: {\r\n        // Vue Object Data will be convert into Observer\r\n        username: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        password: \"\",\r\n        newPassword: \"\",\r\n        confirmNewPassword: \"\",\r\n      },\r\n      errorMessages: {\r\n        // Vue Object Data will be convert into Observer\r\n        username: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        password: \"\",\r\n        newPassword: \"\",\r\n        confirmNewPassword: \"\",\r\n      },\r\n      schema: yup.object().shape({\r\n        username: yup.string().min(1, \"Please type your username!\").label(\"Username\"),\r\n        password: yup.string().min(5).label(\"Password\"),\r\n        newPassword: yup.string().min(5).label(\"Password\"),\r\n        // confirmNewPassword: yup.string().oneOf(\r\n        //   [yup.ref(\"newPassword\")],\r\n        //   \"Both password need to be the same\"\r\n        // ),\r\n        email: yup.string().min(1, \"Please type your email!\").email().label(\"Email\"),\r\n      }),\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Methods\r\n   */\r\n  methods: {\r\n    async handleInputValidation({ name, value }) {\r\n      let validationResult = await this.schema\r\n        .validate({ [name]: value })\r\n        .catch((error) => {\r\n          return error;\r\n        });\r\n      if (validationResult.errors) {\r\n        this.errorMessages[name] = validationResult.errors[0];\r\n        return false;\r\n      } else {\r\n        this.errorMessages[name] = \"\";\r\n        return true;\r\n      }\r\n    },\r\n\r\n    handleFormChange(newData) {\r\n      this.formData[newData.name] = newData.value;\r\n      this.handleInputValidation(newData);\r\n    },\r\n\r\n    toggleModalOpen(type) {\r\n      if (type === \"logout\") {\r\n        this.isLogoutModalOpen = !this.isLogoutModalOpen;\r\n      } else if (type === \"profile\") {\r\n        this.isEditProfileModalOpen = !this.isEditProfileModalOpen;\r\n      } else if (type === \"password\") {\r\n        this.isEditPasswordModalOpen = !this.isEditPasswordModalOpen;\r\n      }\r\n    },\r\n\r\n    editNotes(response) {\r\n      if (response) {\r\n        const { email, username, phoneNumber } = response;\r\n        this.notes[\"New Username\"] = username;\r\n        this.notes[\"New Email\"] = email;\r\n        this.notes[\"New Phone Number\"] = phoneNumber;\r\n        this.isSuccess = true;\r\n      } else {\r\n        this.isSuccess = true;\r\n      }\r\n    },\r\n\r\n    reloadPage() {\r\n      this.$router.push(\"/\");\r\n      this.$router.go(\"/\");\r\n    },\r\n\r\n    logoutUser() {\r\n      if (localStorage.getItem(\"UserToken\") !== \"\") {\r\n        localStorage.removeItem(\"UserToken\");\r\n      }\r\n      if (localStorage.getItem(\"User\") !== \"\") {\r\n        localStorage.removeItem(\"User\");\r\n      }\r\n      this.reloadPage();\r\n    },\r\n\r\n    async handleSubmit() {\r\n      var __this = this;\r\n      const formData = JSON.parse(JSON.stringify(this.formData));\r\n\r\n      const UserToken = localStorage.getItem(\"UserToken\");\r\n      if (localStorage.getItem(\"UserToken\") === \"\") {\r\n        alert(\"Please login before to edit your account info\");\r\n        return;\r\n      }\r\n      /**\r\n       * Get LocalStorage UserInfo fill in unchanged field\r\n       */\r\n      const UserInfo = JSON.parse(localStorage.getItem(\"User\"));\r\n\r\n      if (this.$route.name === \"editAccountProfile\") {\r\n        /**\r\n         * Handle Edit Profile\r\n         */\r\n\r\n        this.toggleModalOpen(\"profile\");\r\n        let usernameOK = await this.handleInputValidation({name: \"username\", value: __this.formData.username});\r\n        let phoneNumberOK = await this.handleInputValidation({name: \"phoneNumber\", value: __this.formData.phoneNumber});\r\n        let emailOK = await this.handleInputValidation({name: \"email\", value: __this.formData.email});\r\n        if (!usernameOK || ! phoneNumberOK || !emailOK) return;\r\n        let settings = {\r\n          url: `${process.env.VUE_APP_API_URL}/auth/update_profile`,\r\n          method: \"post\",\r\n          timeout: 0,\r\n          data: {\r\n            username: formData.username,\r\n            phoneNumber: formData.phone,\r\n            email: formData.email,\r\n            avatar: UserInfo.avatar,\r\n            userId: UserInfo.userId,\r\n          },\r\n          headers: {\r\n            \"Bear-Token\": UserToken,\r\n          },\r\n        };\r\n        $.ajax(settings).done(function (response) {\r\n          response = JSON.parse(JSON.stringify(JSON.parse(response)));\r\n          if (response.status == 200) {\r\n            __this.$refs.noteTitle.innerHTML =\r\n              \"Your Profile Has Been Updated! Please Recheck Before Leaving\";\r\n            __this.editNotes(response.response);\r\n          } else {\r\n            __this.$refs.noteTitle.innerHTML = response.message;\r\n            __this.isSuccess = true;\r\n            __this.editNotes(null);\r\n          }\r\n        });\r\n      } else if (this.$route.name === \"editAccountPassword\") {\r\n        /**\r\n         * Handle Edit Password\r\n         */\r\n        this.toggleModalOpen(\"password\");\r\n        let passwordOK = await this.handleInputValidation({name: \"password\", value: __this.formData.password});\r\n        let newPasswordOK = await this.handleInputValidation({name: \"newPassword\", value: __this.formData.newPassword});\r\n        if (__this.formData.newPassword != __this.formData.confirmNewPassword) {\r\n          this.errorMessages.confirmNewPassword = \"Password is not match!\";\r\n          this.$forceUpdate();\r\n          return;\r\n        }\r\n        if (!passwordOK || !newPasswordOK) return;\r\n        let settings = {\r\n          url: `${process.env.VUE_APP_API_URL}/auth/update_password`,\r\n          method: \"post\",\r\n          timeout: 0,\r\n          data: {\r\n            old_password: formData.password,\r\n            new_password: formData.newPassword,\r\n            verify_password: formData.confirmNewPassword,\r\n          },\r\n          headers: {\r\n            \"Bear-Token\": UserToken,\r\n          },\r\n        };\r\n        $.ajax(settings).done(function (response) {\r\n          response = JSON.parse(JSON.stringify(JSON.parse(response)));\r\n          console.log(response)\r\n          if (response.status == 200) {\r\n            __this.$refs.noteTitle.innerHTML =\r\n              \"Your Password Has Been Updated! Please Recheck Before Leaving\";\r\n              __this.isSuccess = true;\r\n            __this.logoutUser();\r\n          } else {\r\n            //__this.editNotes(response.message);\r\n            __this.isSuccess = true;\r\n            __this.$refs.noteTitle.innerHTML = response.message;\r\n          }\r\n        });\r\n      }\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Lifecycle Hooks\r\n   */\r\n  beforeMount() {\r\n    if (this.$route.name === \"editAccount\") {\r\n      this.$router.history.push({ name: \"editAccountProfile\" });\r\n    }\r\n\r\n    if (localStorage.getItem(\"User\") != \"\") {\r\n      const UserInfo = JSON.parse(localStorage.getItem(\"User\"));\r\n      this.formData.username = UserInfo[\"username\"];\r\n      this.formData.email = UserInfo[\"email\"];\r\n      this.formData.phone = UserInfo[\"phoneNumber\"];\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.edit-account-page-wrapper {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n}\r\n\r\n.edit-options-wrapper {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  width: 30%;\r\n}\r\n\r\n.update-form-wrapper {\r\n  margin: 100px 0 100px 0;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  width: 60%;\r\n}\r\n\r\n.option-item {\r\n  margin: 20px 0 20px 0;\r\n  background: rgba(225, 101, 31, 0.25);\r\n  width: 100%;\r\n  height: 50px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.reservation-note {\r\n  margin: 20px auto;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  background-color: #ededed;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.reservation-note > * {\r\n  width: 100%;\r\n}\r\n\r\n.note-title {\r\n  font-family: Roboto, 'san-serif';\r\n  text-align: center;\r\n  font-size: 200%;\r\n  margin: 20px 0 20px 0;\r\n}\r\n\r\n@media screen and (max-width: 900px) {\r\n  .update-form-wrapper {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"]}]}